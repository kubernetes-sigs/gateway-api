apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/gateway-api/pull/3328
    gateway.networking.k8s.io/bundle-version: v1.2.1
    gateway.networking.k8s.io/channel: experimental
  creationTimestamp: null
  name: tlsroutes.gateway.networking.k8s.io
spec:
  group: gateway.networking.k8s.io
  names:
    categories:
    - gateway-api
    kind: TLSRoute
    listKind: TLSRouteList
    plural: tlsroutes
    singular: tlsroute
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: |-
          The TLSRoute resource is similar to TCPRoute, but can be configured
          to match against TLS-specific metadata. This allows more flexibility
          in matching streams for a given TLS listener.

          If you need to forward traffic to a single target for a TLS listener, you
          could choose to use a TCPRoute with a TLS listener.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            $ref: '#/definitions/sigs.k8s.io~1gateway-api~1apis~1v1~0CommonRouteSpec'
            description: Spec defines the desired state of TLSRoute.
            properties:
              hostnames:
                description: |-
                  Hostnames defines a set of SNI names that should match against the
                  SNI attribute of TLS ClientHello message in TLS handshake. This matches
                  the RFC 1123 definition of a hostname with 2 notable exceptions:

                  1. IPs are not allowed in SNI names per RFC 6066.
                  2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard
                     label must appear by itself as the first label.

                  If a hostname is specified by both the Listener and TLSRoute, there
                  must be at least one intersecting hostname for the TLSRoute to be
                  attached to the Listener. For example:

                  * A Listener with `test.example.com` as the hostname matches TLSRoutes
                    that have either not specified any hostnames, or have specified at
                    least one of `test.example.com` or `*.example.com`.
                  * A Listener with `*.example.com` as the hostname matches TLSRoutes
                    that have either not specified any hostnames or have specified at least
                    one hostname that matches the Listener hostname. For example,
                    `test.example.com` and `*.example.com` would both match. On the other
                    hand, `example.com` and `test.example.net` would not match.

                  If both the Listener and TLSRoute have specified hostnames, any
                  TLSRoute hostnames that do not match the Listener hostname MUST be
                  ignored. For example, if a Listener specified `*.example.com`, and the
                  TLSRoute specified `test.example.com` and `test.example.net`,
                  `test.example.net` must not be considered for a match.

                  If both the Listener and TLSRoute have specified hostnames, and none
                  match with the criteria above, then the TLSRoute is not accepted. The
                  implementation must raise an 'Accepted' Condition with a status of
                  `False` in the corresponding RouteParentStatus.

                  Support: Core
                items:
                  $ref: '#/definitions/sigs.k8s.io~1gateway-api~1apis~1v1~0Hostname'
                maxItems: 16
                type: array
              rules:
                description: Rules are a list of TLS matchers and actions.
                items:
                  description: TLSRouteRule is the configuration for a given rule.
                  properties:
                    backendRefs:
                      description: |-
                        BackendRefs defines the backend(s) where matching requests should be
                        sent. If unspecified or invalid (refers to a nonexistent resource or
                        a Service with no endpoints), the rule performs no forwarding; if no
                        filters are specified that would result in a response being sent, the
                        underlying implementation must actively reject request attempts to this
                        backend, by rejecting the connection or returning a 500 status code.
                        Request rejections must respect weight; if an invalid backend is
                        requested to have 80% of requests, then 80% of requests must be rejected
                        instead.

                        Support: Core for Kubernetes Service

                        Support: Extended for Kubernetes ServiceImport

                        Support: Implementation-specific for any other resource

                        Support for weight: Extended
                      items:
                        $ref: '#/definitions/sigs.k8s.io~1gateway-api~1apis~1v1~0BackendRef'
                      maxItems: 16
                      minItems: 1
                      type: array
                    name:
                      $ref: '#/definitions/sigs.k8s.io~1gateway-api~1apis~1v1~0SectionName'
                      description: |-
                        Name is the name of the route rule. This name MUST be unique within a Route if it is set.

                        Support: Extended
                  type: object
                maxItems: 16
                minItems: 1
                type: array
                x-kubernetes-validations:
                - message: Rule name must be unique within the route
                  rule: self.all(l1, !has(l1.name) || self.exists_one(l2, has(l2.name)
                    && l1.name == l2.name))
            required:
            - rules
            type: object
          status:
            $ref: '#/definitions/sigs.k8s.io~1gateway-api~1apis~1v1~0RouteStatus'
            description: Status defines the current state of TLSRoute.
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
