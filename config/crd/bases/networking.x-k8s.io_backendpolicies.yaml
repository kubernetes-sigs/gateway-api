
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.5.0
  creationTimestamp: null
  name: backendpolicies.networking.x-k8s.io
spec:
  group: networking.x-k8s.io
  names:
    categories:
    - gateway-api
    kind: BackendPolicy
    listKind: BackendPolicyList
    plural: backendpolicies
    shortNames:
    - bp
    singular: backendpolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: BackendPolicy defines policies associated with backends. For
          the purpose of this API, a backend is defined as any resource that a route
          can forward traffic to. A common example of a backend is a Service. Configuration
          that is implementation specific may be represented with similar implementation
          specific custom resources.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of BackendPolicy.
            properties:
              backendRefs:
                description: "BackendRefs define which backends this policy should
                  be applied to. This policy can only apply to backends within the
                  same namespace. If more than one BackendPolicy targets the same
                  backend, precedence must be given to the oldest BackendPolicy. \n
                  Support: Core"
                items:
                  description: BackendRef identifies an API object within the same
                    namespace as the BackendPolicy.
                  properties:
                    group:
                      description: Group is the group of the referent.
                      maxLength: 253
                      type: string
                    kind:
                      description: Kind is the kind of the referent.
                      maxLength: 253
                      type: string
                    name:
                      description: Name is the name of the referent.
                      maxLength: 253
                      type: string
                    port:
                      description: Port is the port of the referent. If unspecified,
                        this policy applies to all ports on the backend.
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                  required:
                  - group
                  - kind
                  - name
                  type: object
                maxItems: 16
                type: array
              tls:
                description: "TLS is the TLS configuration for these backends. \n
                  Support: Extended"
                properties:
                  certificateAuthorityRef:
                    description: "CertificateAuthorityRef is a reference to a Kubernetes
                      object that contains one or more trusted CA certificates. The
                      CA certificates are used to establish a TLS handshake to backends
                      listed in BackendRefs. The referenced object MUST reside in
                      the same namespace as BackendPolicy. \n CertificateAuthorityRef
                      can reference a standard Kubernetes resource, i.e. ConfigMap,
                      or an implementation-specific custom resource. \n When stored
                      in a Secret, certificates must be PEM encoded and specified
                      within the \"ca.crt\" data field of the Secret. When multiple
                      certificates are specified, the certificates MUST be concatenated
                      by new lines. \n CertificateAuthorityRef can also reference
                      a standard Kubernetes resource, i.e. ConfigMap, or an implementation-specific
                      custom resource. \n Support: Extended"
                    properties:
                      group:
                        description: Group is the group of the referent.
                        maxLength: 253
                        minLength: 1
                        type: string
                      kind:
                        description: Kind is kind of the referent.
                        maxLength: 253
                        minLength: 1
                        type: string
                      name:
                        description: Name is the name of the referent.
                        maxLength: 253
                        minLength: 1
                        type: string
                    required:
                    - group
                    - kind
                    - name
                    type: object
                  options:
                    additionalProperties:
                      type: string
                    description: "Options are a list of key/value pairs to give extended
                      options to the provider. \n Support: Implementation-specific"
                    type: object
                type: object
            required:
            - backendRefs
            type: object
          status:
            description: Status defines the current state of BackendPolicy.
            properties:
              conditions:
                description: Conditions describe the current conditions of the BackendPolicy.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
