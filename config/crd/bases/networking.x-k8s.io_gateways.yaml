
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: gateways.networking.x-k8s.io
spec:
  group: networking.x-k8s.io
  names:
    kind: Gateway
    listKind: GatewayList
    plural: gateways
    singular: gateway
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Gateway represents an instantiation of a service-traffic handling
          infrastructure by binding Listeners to a set of IP addresses.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: "GatewaySpec defines the desired state of Gateway. \n The
              Spec is split into two major pieces: listeners describing client-facing
              properties and routes that describe application-level routing. \n Not
              all possible combinations of options specified in the Spec are valid.
              Some invalid configurations can be caught synchronously via a webhook,
              but there are many cases that will require asynchronous signaling via
              the GatewayStatus block."
            properties:
              addresses:
                description: "Addresses requested for this gateway. This is optional
                  and behavior can depend on the GatewayClass. If a value is set in
                  the spec and the requested address is invalid, the GatewayClass
                  MUST indicate this in the associated entry in GatewayStatus.Listeners.
                  \n If no ListenerAddresses are specified, the GatewayClass may schedule
                  the Gateway in an implementation-defined manner, assigning an appropriate
                  set of ListenerAddresses. \n The GatewayClass MUST bind all Listeners
                  to every ListenerAddress that it assigns to the Gateway. \n Support:
                  Core"
                items:
                  description: ListenerAddress describes an address for the Listener.
                  properties:
                    type:
                      description: "Type of the Address. This is one of the *AddressType
                        constants. \n Support: Extended"
                      type: string
                    value:
                      description: 'Value. Examples: "1.2.3.4", "128::1", "my-ip-address".
                        Validity of the values will depend on `Type` and support by
                        the controller.'
                      type: string
                  required:
                  - type
                  - value
                  type: object
                type: array
              class:
                description: Class used for this Gateway. This is the name of a GatewayClass
                  resource.
                type: string
              listeners:
                description: "Listeners associated with this Gateway. Listeners define
                  logical endpoints that are bound on this Gateway's addresses. At
                  least one Listener MUST be specified. \n Each Listener in this array
                  must have a unique Port field, however a GatewayClass may collapse
                  compatible Listener definitions into single implementation-defined
                  acceptor configuration even if their Port fields would otherwise
                  conflict. \n Listeners are compatible if all of the following conditions
                  are true: \n 1. all their Protocol fields are \"HTTP\", or all their
                  Protocol fields are \"HTTPS\" or TLS\" 2. their Hostname fields
                  are specified with a match type other than \"Any\" 3. their Hostname
                  fields are not an exact match for any other Listener \n As a special
                  case, each group of compatible listeners may contain exactly one
                  Listener with a match type of \"Any\". \n If the GatewayClass collapses
                  compatible Listeners, the host name provided in the incoming client
                  request MUST be matched to a Listener to find the correct set of
                  Routes. The incoming host name MUST be matched using the Hostname
                  field for each Listener in order of most to least specific. That
                  is, \"Exact\" matches must be processed before \"Domain\" matches,
                  which must be processed before \"Any\" matches. \n If this field
                  specifies multiple Listeners that have the same Port value but are
                  not compatible, the GatewayClass must raise a \"PortConflict\" condition
                  on the Gateway. \n Support: Core"
                items:
                  description: Listener embodies the concept of a logical endpoint
                    where a Gateway can accept network connections.
                  properties:
                    hostname:
                      default:
                        match: Any
                      description: "Hostname specifies to match the virtual host name
                        for protocol types that define this concept. \n Incoming requests
                        that include a host name are matched according to the given
                        HostnameMatchType to select the Routes from this Listener.
                        \n If a match type other than \"Any\" is supplied, it MUST
                        be compatible with the specified Protocol field. \n Support:
                        Core"
                      properties:
                        match:
                          default: Exact
                          description: Match specifies how the host name provided
                            by the client should be matched against the given value.
                          enum:
                          - Domain
                          - Exact
                          - Any
                          type: string
                        name:
                          description: "Name contains the name to match against. This
                            value must be a fully qualified host or domain name conforming
                            to the preferred name syntax defined in [RFC 1034](https://tools.ietf.org/html/rfc1034#section-3.5)
                            \n In addition to any RFC rules, this field MUST NOT contain
                            \n 1. IP address literals 2. Colon-delimited port numbers
                            3. Percent-encoded octets \n This field is required for
                            the \"Domain\" and \"Exact\" match types."
                          type: string
                      type: object
                    port:
                      description: "Port is the network port. Multiple listeners may
                        use the same port, subject to the Listener compatibility rules.
                        \n Support: Core"
                      format: int32
                      type: integer
                    protocol:
                      description: "Protocol specifies the network protocol this listener
                        expects to receive. The GatewayClass MUST validate that match
                        type specified in the Hostname field is appropriate for the
                        protocol. \n * For the \"TLS\" protocol, the Hostname match
                        MUST be   applied to the [SNI](https://tools.ietf.org/html/rfc6066#section-3)
                        \  server name offered by the client. * For the \"HTTP\" protocol,
                        the Hostname match MUST be   applied to the host portion of
                        the   [effective request URI](https://tools.ietf.org/html/rfc7230#section-5.5)
                        \  or the [:authority pseudo-header](https://tools.ietf.org/html/rfc7540#section-8.1.2.3)
                        * For the \"HTTPS\" protocol, the Hostname match MUST be   applied
                        at both the TLS and HTTP protocol layers. \n Support: Core"
                      enum:
                      - HTTP
                      - HTTPS
                      - TLS
                      - TCP
                      type: string
                    routes:
                      description: "Routes specifies a schema for associating routes
                        with the Listener using selectors. A Route is a resource capable
                        of servicing a request and allows a cluster operator to expose
                        a cluster resource (i.e. Service) by externally-reachable
                        URL, load-balance traffic and terminate SSL/TLS.  Typically,
                        a route is a \"HTTPRoute\" or \"TCPRoute\" in group \"networking.x-k8s.io\",
                        however, an implementation may support other types of resources.
                        \n The Routes selector MUST select a set of objects that are
                        compatible with the application protocol specified in the
                        Protocol field. \n Support: Core"
                      properties:
                        namespaceSelector:
                          description: "NamespaceSelector specifies a set of namespace
                            labels used for selecting routes to associate with the
                            Gateway. If NamespaceSelector is defined, all routes in
                            namespaces matching the NamespaceSelector are associated
                            to the Gateway. \n An empty NamespaceSelector (default)
                            indicates that routes from any namespace will be associated
                            to this Gateway. This field is intentionally not a pointer
                            because the nil behavior (no namespaces) is undesirable
                            here. \n Support: Core"
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        routeSelector:
                          description: "RouteSelector specifies a set of route labels
                            used for selecting routes to associate with the Gateway.
                            If RouteSelector is defined, only routes matching the
                            RouteSelector are associated with the Gateway. An empty
                            RouteSelector matches all routes. \n If undefined, route
                            labels are not used for associating routes to the gateway.
                            \n Support: Core"
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                      required:
                      - namespaceSelector
                      type: object
                    tls:
                      description: "TLS is the TLS configuration for the Listener.
                        This field is required if the Protocol field is \"HTTPS\"
                        or \"TLS\". \n Support: Core"
                      properties:
                        certificateRefs:
                          description: "CertificateRefs is a list of references to
                            Kubernetes objects that each contain an identity certificate.
                            \ The host name in a TLS SNI client hello message is used
                            for certificate matching and route host name selection.
                            The SNI server_name must match a route host name for the
                            Gateway to route the TLS request.  If an entry in this
                            list omits or specifies the empty string for both the
                            group and the resource, the resource defaults to \"secrets\".
                            An implementation may support other resources (for example,
                            resource \"mycertificates\" in group \"networking.acme.io\").
                            \n Support: Core (Kubernetes Secrets) Support: Implementation-specific
                            (Other resource types)"
                          items:
                            description: SecretsDefaultLocalObjectReference identifies
                              an API object within a known namespace that defaults
                              group to core and resource to secrets if unspecified.
                            properties:
                              group:
                                default: core
                                description: "Group is the group of the referent.
                                  \ Omitting the value or specifying the empty string
                                  indicates the core API group.  For example, use
                                  the following to specify a secrets resource: \n
                                  fooRef:   resource: secrets   name: mysecret \n
                                  Otherwise, if the core API group is not desired,
                                  specify the desired group: \n fooRef:   group: acme.io
                                  \  resource: foos   name: myfoo"
                                type: string
                              name:
                                description: Name is the name of the referent.
                                type: string
                              resource:
                                default: secrets
                                description: "Resource is the API resource name of
                                  the referent. Omitting the value or specifying the
                                  empty string indicates the secrets resource. For
                                  example, use the following to specify a secrets
                                  resource: \n fooRef:   name: mysecret \n Otherwise,
                                  if the secrets resource is not desired, specify
                                  the desired group: \n fooRef:   group: acme.io   resource:
                                  foos   name: myfoo"
                                type: string
                            required:
                            - group
                            - name
                            - resource
                            type: object
                          type: array
                        minimumVersion:
                          description: "MinimumVersion of TLS allowed. It is recommended
                            to use one of the TLS_* constants above. Note: MinimumVersion
                            is not strongly typed to allow implementation-specific
                            versions to be used without requiring updates to the API
                            types. String must be of the form \"<protocol><major>_<minor>\".
                            \n Support: Core for TLS1_{1,2,3}. Implementation-specific
                            for all other values."
                          type: string
                        options:
                          additionalProperties:
                            type: string
                          description: "Options are a list of key/value pairs to give
                            extended options to the provider. \n There variation among
                            providers as to how ciphersuites are expressed. If there
                            is a common subset for expressing ciphers then it will
                            make sense to loft that as a core API construct. \n Support:
                            Implementation-specific."
                          type: object
                      required:
                      - options
                      type: object
                  required:
                  - routes
                  type: object
                minItems: 1
                type: array
            required:
            - class
            - listeners
            type: object
          status:
            description: GatewayStatus defines the observed state of Gateway.
            properties:
              conditions:
                description: Conditions describe the current conditions of the Gateway.
                items:
                  description: GatewayCondition is an error status for a given route.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime indicates the last time this
                        condition changed. This should be when the underlying condition
                        changed. If that is not known, then using the time when the
                        API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human-understandable message describing
                        the condition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: Reason indicates why the condition is in this state.
                        This field must not be empty.
                      type: string
                    status:
                      description: Status describes the current state of this condition.
                        Can be "True", "False", or "Unknown".
                      type: string
                    type:
                      description: Type indicates the type of condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              listeners:
                description: Listeners provide status for each listener defined in
                  the Spec. The name in ListenerStatus refers to the corresponding
                  Listener of the same name.
                items:
                  description: ListenerStatus is the status associated with each listener
                    block.
                  properties:
                    address:
                      description: Address bound on this listener. TODO(jpeach) Listeners
                        don't have addresses anymore so this field should move to
                        the GatewayStatus.
                      properties:
                        type:
                          description: "Type of the Address. This is one of the *AddressType
                            constants. \n Support: Extended"
                          type: string
                        value:
                          description: 'Value. Examples: "1.2.3.4", "128::1", "my-ip-address".
                            Validity of the values will depend on `Type` and support
                            by the controller.'
                          type: string
                      required:
                      - type
                      - value
                      type: object
                    conditions:
                      description: Conditions describe the current condition of this
                        listener.
                      items:
                        description: ListenerCondition is an error status for a given
                          listener.
                        properties:
                          lastTransitionTime:
                            description: LastTransitionTime indicates the last time
                              this condition changed. This should be when the underlying
                              condition changed. If that is not known, then using
                              the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: Message is a human-understandable message
                              describing the condition. This field may be empty.
                            type: string
                          observedGeneration:
                            description: If set, this represents the .metadata.generation
                              that the condition was set based upon. For instance,
                              if .metadata.generation is currently 12, but the .status.condition[x].observedGeneration
                              is 9, the condition is out of date with respect to the
                              current state of the instance.
                            format: int64
                            type: integer
                          reason:
                            description: Reason indicates why the condition is in
                              this state. This field must not be empty.
                            type: string
                          status:
                            description: Status describes the current state of this
                              condition. Can be "True", "False", or "Unknown".
                            type: string
                          type:
                            description: Type indicates the type of condition.
                            type: string
                        required:
                        - status
                        - type
                        type: object
                      type: array
                    name:
                      description: Name is the name of the listener this status refers
                        to. TODO(jpeach) Listeners are not indexed by a unique name
                        any more, so this field probably doesn't make sense.
                      type: string
                  required:
                  - address
                  - conditions
                  - name
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
