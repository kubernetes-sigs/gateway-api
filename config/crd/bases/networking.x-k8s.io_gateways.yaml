
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: gateways.networking.x-k8s.io
spec:
  group: networking.x-k8s.io
  names:
    kind: Gateway
    listKind: GatewayList
    plural: gateways
    singular: gateway
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Gateway represents an instantiation of a service-traffic handling
          infrastructure.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: "GatewaySpec defines the desired state of Gateway. \n The
              Spec is split into two major pieces: listeners describing client-facing
              properties and routes that describe application-level routing. \n Not
              all possible combinations of options specified in the Spec are valid.
              Some invalid configurations can be caught synchronously via a webhook,
              but there are many cases that will require asynchronous signaling via
              the GatewayStatus block."
            properties:
              class:
                description: Class used for this Gateway. This is the name of a GatewayClass
                  resource.
                type: string
              listeners:
                description: Listeners associated with this Gateway. Listeners define
                  what addresses, ports, protocols are bound on this Gateway.
                items:
                  description: Listener defines a
                  properties:
                    address:
                      description: "Address requested for this listener. This is optional
                        and behavior can depend on GatewayClass. If a value is set
                        in the spec and the request address is invalid, the GatewayClass
                        MUST indicate this in the associated entry in GatewayStatus.Listeners.
                        \n Support:"
                      properties:
                        type:
                          description: "Type of the Address. This is one of the *AddressType
                            constants. \n Support: Extended"
                          type: string
                        value:
                          description: 'Value. Examples: "1.2.3.4", "128::1", "my-ip-address".
                            Validity of the values will depend on `Type` and support
                            by the controller.'
                          type: string
                      required:
                      - type
                      - value
                      type: object
                    extensionRef:
                      description: "ExtensionRef for this Listener.  The resource
                        may be \"configmaps\" or an implementation-defined resource
                        (for example, resource \"mylisteners\" in group \"networking.acme.io\").
                        \ Omitting or specifying the empty string for both the resource
                        and group indicates that the resource is \"configmaps\".  If
                        the referent cannot be found, the listener's \"InvalidListener\"
                        status condition will be true. \n Support: custom."
                      properties:
                        group:
                          default: core
                          description: "Group is the group of the referent.  Omitting
                            the value or specifying the empty string indicates the
                            core API group.  For example, use the following to specify
                            a configmaps: \n fooRef:   resource: configmaps   name:
                            myconfigmap \n Otherwise, if the core API group is not
                            desired, specify the desired group: \n fooRef:   group:
                            acme.io   resource: foos   name: myfoo"
                          type: string
                        name:
                          description: Name is the name of the referent.
                          type: string
                        resource:
                          default: configmaps
                          description: "Resource is the API resource name of the referent.
                            Omitting the value or specifying the empty string indicates
                            the configmaps resource. For example, use the following
                            to specify a configmaps resource: \n fooRef:   name: myconfigmap
                            \n Otherwise, if the configmaps resource is not desired,
                            specify the desired group: \n fooRef:   group: acme.io
                            \  resource: foos   name: myfoo"
                          type: string
                      required:
                      - group
                      - name
                      - resource
                      type: object
                    name:
                      description: "Name is the listener's name and should be specified
                        as an RFC 1035 DNS_LABEL [1]: \n [1] https://tools.ietf.org/html/rfc1035
                        \n Each listener of a Gateway must have a unique name. Name
                        is used for associating a listener in Gateway status. \n Support:
                        Core"
                      type: string
                    port:
                      description: "Port is a list of ports associated with the Address.
                        \n Support:"
                      format: int32
                      type: integer
                    protocol:
                      description: "Protocol to use. \n Support:"
                      type: string
                    tls:
                      description: "TLS is the TLS configuration for the Listener.
                        If unspecified, the listener will not support TLS connections.
                        \n Support: Core"
                      properties:
                        certificateRefs:
                          description: "CertificateRefs is a list of references to
                            Kubernetes objects that each contain an identity certificate.
                            \ The host name in a TLS SNI client hello message is used
                            for certificate matching and route host name selection.
                            The SNI server_name must match a route host name for the
                            Gateway to route the TLS request.  If an entry in this
                            list omits or specifies the empty string for both the
                            group and the resource, the resource defaults to \"secrets\".
                            An implementation may support other resources (for example,
                            resource \"mycertificates\" in group \"networking.acme.io\").
                            \n Support: Core (Kubernetes Secrets) Support: Implementation-specific
                            (Other resource types)"
                          items:
                            description: SecretsDefaultLocalObjectReference identifies
                              an API object within a known namespace that defaults
                              group to core and resource to secrets if unspecified.
                            properties:
                              group:
                                default: core
                                description: "Group is the group of the referent.
                                  \ Omitting the value or specifying the empty string
                                  indicates the core API group.  For example, use
                                  the following to specify a secrets resource: \n
                                  fooRef:   resource: secrets   name: mysecret \n
                                  Otherwise, if the core API group is not desired,
                                  specify the desired group: \n fooRef:   group: acme.io
                                  \  resource: foos   name: myfoo"
                                type: string
                              name:
                                description: Name is the name of the referent.
                                type: string
                              resource:
                                default: secrets
                                description: "Resource is the API resource name of
                                  the referent. Omitting the value or specifying the
                                  empty string indicates the secrets resource. For
                                  example, use the following to specify a secrets
                                  resource: \n fooRef:   name: mysecret \n Otherwise,
                                  if the secrets resource is not desired, specify
                                  the desired group: \n fooRef:   group: acme.io   resource:
                                  foos   name: myfoo"
                                type: string
                            required:
                            - group
                            - name
                            - resource
                            type: object
                          type: array
                        minimumVersion:
                          description: "MinimumVersion of TLS allowed. It is recommended
                            to use one of the TLS_* constants above. Note: MinimumVersion
                            is not strongly typed to allow implementation-specific
                            versions to be used without requiring updates to the API
                            types. String must be of the form \"<protocol><major>_<minor>\".
                            \n Support: Core for TLS1_{1,2,3}. Implementation-specific
                            for all other values."
                          type: string
                        options:
                          additionalProperties:
                            type: string
                          description: "Options are a list of key/value pairs to give
                            extended options to the provider. \n There variation among
                            providers as to how ciphersuites are expressed. If there
                            is a common subset for expressing ciphers then it will
                            make sense to loft that as a core API construct. \n Support:
                            Implementation-specific."
                          type: object
                      required:
                      - options
                      type: object
                  required:
                  - name
                  type: object
                type: array
              routes:
                description: "Routes specifies a schema for associating routes with
                  the Gateway using selectors. A route is a resource capable of servicing
                  a request and allows a cluster operator to expose a cluster resource
                  (i.e. Service) by externally-reachable URL, load-balance traffic
                  and terminate SSL/TLS. Typically, a route is a \"httproute\" or
                  \"tcproute\" in group \"networking.x-k8s.io\". However, an implementation
                  may support other resources. \n A nil Routes field (default) indicates
                  that no routes should be associated with this Gateway. \n Support:
                  Core"
                properties:
                  namespaceSelector:
                    description: "NamespaceSelector specifies a set of namespace labels
                      used for selecting routes to associate with the Gateway. \n
                      An empty NamespaceSelector (default) indicates that routes from
                      any Namespace can be selected by this Gateway. \n The OnlyLocalRoutes
                      field takes precedence over this field. This selector will only
                      take effect when OnlyLocalRoutes is false. \n Support: Core"
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                    type: object
                  onlyLocalRoutes:
                    default: true
                    description: "OnlyLocalRoutes is a boolean used to indicate if
                      routes should only be selected from within the same namespace.
                      \n When true (default) only routes in the same namespace as
                      the Gateway will be selected. \n This field takes precedence
                      over the NamespaceSelector field. That selector should only
                      take effect when this field is set to false. \n Support: Core"
                    type: boolean
                  routeSelector:
                    description: "RouteSelector specifies a set of route labels used
                      for selecting routes to associate with the Gateway. If RouteSelector
                      is defined, only routes matching the RouteSelector are associated
                      with the Gateway. This selector only applies to namespaces allowed
                      by OnlyLocalRoutes or NamespaceSelector. \n An empty RouteSelector
                      (default) selects all routes. \n Support: Core"
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                    type: object
                type: object
            required:
            - class
            - listeners
            type: object
          status:
            description: GatewayStatus defines the observed state of Gateway.
            properties:
              conditions:
                description: Conditions describe the current conditions of the Gateway.
                items:
                  description: GatewayCondition is an error status for a given route.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime indicates the last time this
                        condition changed.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human-understandable message describing
                        the condition. This field may be empty.
                      type: string
                    reason:
                      description: Reason indicates why the condition is in this state.
                        This field must not be empty.
                      type: string
                    status:
                      description: Status describes the current state of this condition.
                        Can be "True", "False", or "Unknown".
                      type: string
                    type:
                      description: Type indicates the type of condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              listeners:
                description: Listeners provide status for each listener defined in
                  the Spec. The name in ListenerStatus refers to the corresponding
                  Listener of the same name.
                items:
                  description: ListenerStatus is the status associated with each listener
                    block.
                  properties:
                    address:
                      description: Address bound on this listener.
                      properties:
                        type:
                          description: "Type of the Address. This is one of the *AddressType
                            constants. \n Support: Extended"
                          type: string
                        value:
                          description: 'Value. Examples: "1.2.3.4", "128::1", "my-ip-address".
                            Validity of the values will depend on `Type` and support
                            by the controller.'
                          type: string
                      required:
                      - type
                      - value
                      type: object
                    conditions:
                      description: Conditions describe the current condition of this
                        listener.
                      items:
                        description: ListenerCondition is an error status for a given
                          listener.
                        properties:
                          lastTransitionTime:
                            description: LastTransitionTime indicates the last time
                              this condition changed.
                            format: date-time
                            type: string
                          message:
                            description: Message is a human-understandable message
                              describing the condition. This field may be empty.
                            type: string
                          reason:
                            description: Reason indicates why the condition is in
                              this state. This field must not be empty.
                            type: string
                          status:
                            description: Status describes the current state of this
                              condition. Can be "True", "False", or "Unknown".
                            type: string
                          type:
                            description: Type indicates the type of condition.
                            type: string
                        required:
                        - status
                        - type
                        type: object
                      type: array
                    name:
                      description: Name is the name of the listener this status refers
                        to.
                      type: string
                  required:
                  - address
                  - conditions
                  - name
                  type: object
                type: array
            required:
            - conditions
            - listeners
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
