# This file contains the base resources that most conformance tests will rely
# on. This includes 3 namespaces along with Gateways, Services and Deployments
# that can be used as backends for routing traffic. The most important
# resources included are the Gateways (all in the gateway-conformance-infra
# namespace):
# - same-namespace (only supports route in same ns)
# - all-namespaces (supports routes in all ns)
# - backend-namespaces (supports routes in ns with backend label)
apiVersion: v1
kind: Namespace
metadata:
  name: gateway-conformance-infra
  labels:
    gateway-conformance: infra
---
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: Gateway
metadata:
  name: same-namespace
  namespace: gateway-conformance-infra
spec:
  gatewayClassName: "{GATEWAY_CLASS_NAME}"
  listeners:
  - name: http
    port: 80
    protocol: HTTP
    allowedRoutes:
      namespaces:
        from: Same
---
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: Gateway
metadata:
  name: all-namespaces
  namespace: gateway-conformance-infra
spec:
  gatewayClassName: "{GATEWAY_CLASS_NAME}"
  listeners:
  - name: http
    port: 80
    protocol: HTTP
    allowedRoutes:
      namespaces:
        from: All
---
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: Gateway
metadata:
  name: backend-namespaces
  namespace: gateway-conformance-infra
spec:
  gatewayClassName: "{GATEWAY_CLASS_NAME}"
  listeners:
  - name: http
    port: 80
    protocol: HTTP
    allowedRoutes:
      namespaces:
        from: Selector
        selector:
          matchLabels:
            gateway-conformance: backend
---
apiVersion: v1
kind: Service
metadata:
  name: infra-backend-v1
  namespace: gateway-conformance-infra
spec:
  selector:
    app: infra-backend-v1
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: infra-backend-v1
  namespace: gateway-conformance-infra
  labels:
    app: infra-backend-v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: infra-backend-v1
  template:
    metadata:
      labels:
        app: infra-backend-v1
    spec:
      containers:
      - name: infra-backend-v1
        image: k8s.gcr.io/ingressconformance/echoserver:v0.0.1
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            cpu: 10m
---
apiVersion: v1
kind: Service
metadata:
  name: infra-backend-v2
  namespace: gateway-conformance-infra
spec:
  selector:
    app: infra-backend-v2
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: infra-backend-v2
  namespace: gateway-conformance-infra
  labels:
    app: infra-backend-v2
spec:
  replicas: 2
  selector:
    matchLabels:
      app: infra-backend-v2
  template:
    metadata:
      labels:
        app: infra-backend-v2
    spec:
      containers:
      - name: infra-backend-v2
        image: k8s.gcr.io/ingressconformance/echoserver:v0.0.1
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            cpu: 10m
---
apiVersion: v1
kind: Service
metadata:
  name: infra-backend-v3
  namespace: gateway-conformance-infra
spec:
  selector:
    app: infra-backend-v3
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: infra-backend-v3
  namespace: gateway-conformance-infra
  labels:
    app: infra-backend-v3
spec:
  replicas: 2
  selector:
    matchLabels:
      app: infra-backend-v3
  template:
    metadata:
      labels:
        app: infra-backend-v3
    spec:
      containers:
      - name: infra-backend-v3
        image: k8s.gcr.io/ingressconformance/echoserver:v0.0.1
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            cpu: 10m
---
apiVersion: v1
kind: Namespace
metadata:
  name: gateway-conformance-app-backend
  labels:
    gateway-conformance: backend
---
apiVersion: v1
kind: Service
metadata:
  name: app-backend-v1
  namespace: gateway-conformance-app-backend
spec:
  selector:
    app: app-backend-v1
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-backend-v1
  namespace: gateway-conformance-app-backend
  labels:
    app: app-backend-v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: app-backend-v1
  template:
    metadata:
      labels:
        app: app-backend-v1
    spec:
      containers:
      - name: app-backend-v1
        image: k8s.gcr.io/ingressconformance/echoserver:v0.0.1
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            cpu: 10m
---
apiVersion: v1
kind: Service
metadata:
  name: app-backend-v2
  namespace: gateway-conformance-app-backend
spec:
  selector:
    app: app-backend-v2
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-backend-v2
  namespace: gateway-conformance-app-backend
  labels:
    app: app-backend-v2
spec:
  replicas: 2
  selector:
    matchLabels:
      app: app-backend-v2
  template:
    metadata:
      labels:
        app: app-backend-v2
    spec:
      containers:
      - name: app-backend-v2
        image: k8s.gcr.io/ingressconformance/echoserver:v0.0.1
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            cpu: 10m
---
apiVersion: v1
kind: Namespace
metadata:
  name: gateway-conformance-web-backend
  labels:
    gateway-conformance: backend
---
apiVersion: v1
kind: Service
metadata:
  name: web-backend
  namespace: gateway-conformance-web-backend
spec:
  selector:
    app: web-backend
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-backend
  namespace: gateway-conformance-web-backend
  labels:
    app: web-backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: web-backend
  template:
    metadata:
      labels:
        app: web-backend
    spec:
      containers:
      - name: web-backend
        image: k8s.gcr.io/ingressconformance/echoserver:v0.0.1
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            cpu: 10m
---
apiVersion: v1
kind: Namespace
metadata:
  name: secrets
  labels:
    gateway-conformance: secrets
---
apiVersion: v1
kind: Secret
metadata:
  name: certificate
  namespace: secrets
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUU2RENDQXRBQ0NRQ2xDM0tMdkJiSlBqQU5CZ2txaGtpRzl3MEJBUXNGQURBMk1Rc3dDUVlEVlFRR0V3SlYKVXpFVE1CRUdBMVVFQ2d3S1MzVmlaWEp1WlhSbGN6RVNNQkFHQTFVRUF3d0piRzlqWVd4b2IzTjBNQjRYRFRJeQpNRFF4T1RFMk5ERXhOMW9YRFRJek1EUXhPVEUyTkRFeE4xb3dOakVMTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WCkJBb01Da3QxWW1WeWJtVjBaWE14RWpBUUJnTlZCQU1NQ1d4dlkyRnNhRzl6ZERDQ0FpSXdEUVlKS29aSWh2Y04KQVFFQkJRQURnZ0lQQURDQ0Fnb0NnZ0lCQUxZRjVMT2pzNlhLMEhWUWxwamh3YXFMS016dW5FTUs5eUxISDcxUgp0dDVWOC9iUzVrTEE5NzhDeWhmVExVRHdKTy9zRXIyVHZPRE1oNG5KZWxyWGp2VEpQSzZvVlM2bWZYcXRWOVpPCk9pcDJtdE5odnBaRTloYTMralVuS1A1R2paSEFlODcxR3g3ZGZ0ajk1YTYzNUNyZEtRSEVKZWh5K2xJT3BpZjgKSGNFNmZsSWViaE9peW43bHE5cHptREZmOTZVNUhKU05sZ2ttK3lIcVd6ZE1FWlBnRXhQK3Q2Ym1HcUJHZnJpbwpITGpRRVRaSEFweFNkSkoxSzN4RWgzcmpFeitJTkhMYTdIeDBUTFRNandsR1ZJTGMza0tqNVJxb05FWTNwWUYxCmFnV2xpSy8xVzlkOFF1VlBvajNFU3E3d1gxTG00NU90NXRKTUtqbnJCOGxPVVJmV3YyQlBMYWdoRkl2WmVjNksKQ21jc25hd0hFZzE0RGJxQUdmNkNGWjdEMkoyeXRqUHArWVVrUTRQZEg1MzlkYzhVSlFuUHZXLytYRUJYMUg1dQozMmV6OUlwVVdQNHRHREpBMWVUa0orQW03VDdrVE1lbFk3ekE5RkRVOWpncWFDc21QNUIzeExCWktkN0ZadXBrCmhrbTJzWHZhazFtRzY1WkRQUC9qc2g1VExTazhUZTZJR0lOdWEzd1ZNc09icWlxRW05ZmVsWFlBOG1aUGMwRlUKRVNWSXhNeFNoOEdQZWV1dHNlTVVNb2tXTmFqNEZSU2JRR1V1bWpSZHNoV0MrV3ZIQU9zV2pRSTJhbFA5Y3cxYgpDS05CbXpiRURKLytZalJ1bXZGYUo3TmtzUDZVRklLVXdJS1VmOWdOOWs5UXFpQlU1TWIxQ1lmZWJteEJtN3oyCjQ0b2JBZ01CQUFFd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dJQkFJZS9iRzZZcVBIYmdHbG5WMUpTckpTcERVSVcKL0REdFhuclFudzFZYkhrV3J0VWwyczdicTZobSthNndobGNqOXJWTUhwZ0JDUEE2bHY5OWprbXEyL2hsNk5EeQp0ZFNmVGVmNWhtcjJOTG1xVzhRQUQrQm5rTjhpQ3JnV1krSHpHMW5PQWhaVGFINE93azgvVmZUYmFPMWhzVStQCjFnb3NyU3Q1Zk5SSGErQ3RGWWVPZHJSUFRQMUh5TDZDdFppV2R3THA3Y0dDWXZxY28ySjZOMzQ3ank3Nmx5dzUKNFc1Zm02RW5RaXFzZGo1VitYWmt6L3k4Nnp2ZUpPLzZMN1VmeE9BR09KclFETFNXLzUzSEFYcTN4RWhYbnd2aQpweWhISkpWVmxPclZWcEdxSlRlUDVya0VXOWJYNGtqdkZoQklvZXQyKy9leTQvdU5aanREdGtVWVlrZHAwaWdKClVabjlEeGV0ZzRxZEN1aDdCcFphdmJvTWJRNGdlTXNQckFRVXBrcVJmeVh3OGFNTXV0bk0zalV1dWpSN0FiWngKc2puYWJQOTdWY0MxRTdhenkraEJTM2pjTHlyTmdzdWd6REhXb1QyeHhSNXo3NEdSMFozSGdSQlRJWnRmYTJ4RwpZeDdpeWI4ZnFTMGZrQ3YyL1hxTVh0NisvUGdabGdhaDBBSXRoSlVkOGtoOE1OZmRwZURyQVNIQWF2eEFFTzNqCjMrWTZwZzVpVWg2OEE0SVlMOHNsSlNTZlE0NzZuaGpyekp6NU5DSHUzVC9yMVEwaVZqTGNjdEFrc1NWdTNlSHcKdzB1YTVKeG5pTDUzYmwxakVPTEV0QzFVS1RNeXR5Uy94M1I2UTNoSUlNR0dyNE5nV1VGdU9aRnJURWxkODNiVwpIa3JJS0JZTlY1Zy9nWmJnCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS0FJQkFBS0NBZ0VBdGdYa3M2T3pwY3JRZFZDV21PSEJxb3Nvek82Y1F3cjNJc2NmdlZHMjNsWHo5dExtClFzRDN2d0xLRjlNdFFQQWs3K3dTdlpPODRNeUhpY2w2V3RlTzlNazhycWhWTHFaOWVxMVgxazQ2S25hYTAyRysKbGtUMkZyZjZOU2NvL2thTmtjQjd6dlViSHQxKzJQM2xycmZrS3QwcEFjUWw2SEw2VWc2bUovd2R3VHArVWg1dQpFNkxLZnVXcjJuT1lNVi8zcFRrY2xJMldDU2I3SWVwYk4wd1JrK0FURS82M3B1WWFvRVordUtnY3VOQVJOa2NDCm5GSjBrblVyZkVTSGV1TVRQNGcwY3Ryc2ZIUk10TXlQQ1VaVWd0emVRcVBsR3FnMFJqZWxnWFZxQmFXSXIvVmIKMTN4QzVVK2lQY1JLcnZCZlV1YmprNjNtMGt3cU9lc0h5VTVSRjlhL1lFOHRxQ0VVaTlsNXpvb0taeXlkckFjUwpEWGdOdW9BWi9vSVZuc1BZbmJLMk0rbjVoU1JEZzkwZm5mMTF6eFFsQ2MrOWIvNWNRRmZVZm03Zlo3UDBpbFJZCi9pMFlNa0RWNU9RbjRDYnRQdVJNeDZWanZNRDBVTlQyT0Nwb0t5WS9rSGZFc0ZrcDNzVm02bVNHU2JheGU5cVQKV1licmxrTTgvK095SGxNdEtUeE43b2dZZzI1cmZCVXl3NXVxS29TYjE5NlZkZ0R5Wms5elFWUVJKVWpFekZLSAp3WTk1NjYyeDR4UXlpUlkxcVBnVkZKdEFaUzZhTkYyeUZZTDVhOGNBNnhhTkFqWnFVLzF6RFZzSW8wR2JOc1FNCm4vNWlORzZhOFZvbnMyU3cvcFFVZ3BUQWdwUi8yQTMyVDFDcUlGVGt4dlVKaDk1dWJFR2J2UGJqaWhzQ0F3RUEKQVFLQ0FnQS80czJrWno1MFlEek9FQnpyUjhGTGRGQTdyVHZYSkJBZGVyb2ZIb0VLaEN4K1l3TkNScXd0dEhMdAo3Y2FpVmljQXRtRFZmUGI4QjQxQ3hSNVdwL1dhNE02VmxxdGZGanhRUkdyaDRzN3pmSEZXNDZXYTVGVmpIK3VICm9GajQ5aFpXSTdMUXJxSjRNTkdHbzRacnprc2M2RWF1UWdQMEUvYmJ1aHlEU0MvQlZDQmwvaHd3ZENDU2JWWGwKOUZCa2RBUmRUekJDeTNidmUya0ZQRllMa0gxUzQ0Q09zZ1lQWkEvUVZTM0E3ZkEyeFlCbEJvTmFEbTZ2d01RawpkNEQ5bHBsNDRQdFhuSk1JRTJHZ3kzTWdsRGl4UFlnYzU1MVB2OTJwRDNyZGR6SmhEUHB1bDdWR2FteW9RMHowClZPTEpoOEJOUHBCOWtybkM4Y3lZUzIrT0xoaXpwNURENWNldmFaK3BFR2hoK3ZBV2tPQXZTMXZqOXV3cnhuZkoKbHh3U1JwMTR2V2Y1L3dJRExrR3VmVXRkSnVsOXVFUWRMR1pYK2NyMDYxbUNiNDY2NzR4ODJFbVFkQk0xN2xNawpYa01OcitialFRK3R2cGlySzlDRkR6WnIzcUVCQ3JkRXZyN3BtN1JIL1JVSENLdHVQWTAxQzNLQm9mTHI0a0RuCk5YRk1INEFkOVZKK3FHUUordFBkc25ua3lrTERXb0c4Y0FzcHdudHF2NDdPWS8yNVA5NnBnekRqaDF3UHpVKy8KY3NqM09ndHh6MFJLaDF0Z2NSdjFUdEVYUzM4SHRqc1JrYmh3VXVnLzRKQ0R1bERuSWVZeVJrcHAxVTEvcHhkRQpMNE9Ed3VEOFdBUHFxWEFjbDF6MHlncnlWOXFwQzdSQmhZQ1NKckpqanFMN0pCR0x3UUtDQVFFQTRnNnorb0hsClhIS2VUcmk5cGhheW5pbEp0bnE2SU5vNEV2aTZaRTYxYWZzUVJXOUxIL0MzRTRGMkRrNjFJNGFlNWNmdFNLUU8KT0k3NkhwRm1tSGxTQ0JkK28vdHVnOUE2d0NQUkprZkg3QkJ3Qm5COVFselcvRHlZS2YxNVJ2K2FOeGFWS0FzMQpFMHFzTm5HNjNGbEVCSjVubjVjQWd2eVdFWVYzKzV0b3FZeHozc3dKMm9ZeHlCSDhrQ1EvMFpITzlya1A1NXVtCkpuK1l1QXFwOTFzVGpwTnMvc04xcGhVK3Q2dDJnekhlbGx0Ymk5QVl6UGpjOWlNcUk3eG93TVBRc1FYMFhEZlcKazdlcmpWNDlSaksyVWJaclVwRnBQcDd6SFhDNzdTeDhFYlBqMnBnb3FJRVovV3NKaTBWek51a01IelBhTkx5SQo0Y3Rlazg2SkZQVEZ5d0tDQVFFQXppSUxQSjBaNWJLR2dUQmc2enJac2laTVBUQzkzT01KSVZmWUpvZE5aYlhDCnVpeHpPcE5SK0FwL20yQ1dCZEpnekIxWWlEZXNFa3VoWHQvNStmU2dHTGRQK0lDTFFneEVyZnNJd0o2aHRuWEMKTTY0NlZjYzlWR2NMbGRxTTdYV3ozSklIRUdFaHcwMWNRYW5XZitQdm9FWUY2UjlUcFZsbWU3SmxJbUVVNEtCOQo3S3Y4TWlOVTd6b2hJMWd6TmRzSjMwQ2RRSmN2VGJiaEpXenVyTkhoRFRLSlpmS25aS1ZDRktMWjlwREZMVGhaCkdkZndldHFmRXppcWNBV3Rna2N5L1RLTDY3UHkwTldTMExtb3cwdE5rNUkyVFpIcXBpQzdacGNLYWFzR2RpQ1MKVDRmRE52d05mWDBRMm5CQ2ttTHZsdmh0Mnc0UzZyQ3lBVlZYUFlWQzhRS0NBUUVBdE9jTFJLZDZ3eGErZFVVRwpEOG9PT3QvVHE0SmZQVGNrdEpuem41NFZNN0RFL3F2bnRMSFA4SDRqMmFORzloMGZQOGRVcmxNTFJsdTA4WTF1ClN3cWJpUG8wVUVvLzBLQnN3NkptRjNwT0ZTMjZXSXpnMEtDM01yZlRGWmRRM0c1a0hUMm5NNXAwYVBIVEN1Yk0Kb05XV3h4TjAzWlBieHZjWHFRSGtXS2V2aEM5djhwWGFOTlE3Tmw2ZWZVTmxCdkxtYXk4QitWam9COXNJZmcrYQpvT1p6cWg5MGxCUWJMRVBJSXZmR0tZdFpFMzRjcnJCamlIU0hiem9JMlB4SDRDdFQ4TFpSTFJOS1ZvQWZlMHcxClFONElaUy9VaHdqeTdqZ0pXa0FEUS9QYmZkYzF1cE1WeG5NNk4wRFhMR3J4bnJtMUI2dFpMZWJLcTljeDRwcmYKdkxOOUxRS0NBUUEzNjQ1bTFDdTVYNVFUcWY4dzhWY3JlQzVJajFlQ2UrajNMYkNLeXp2WTh0VXYwbTAwSDlFbAozQnRBR0pTNllaYzI2R01qR1E5S0sxQk12N0E5K2ZvUW1uSk1kUHJTWVNla2x5eUpyTDhzRTRncW93SmFVT0czCmF2aituenFLRk50RlpDd2NhbTFSWVVRODRBazd5cWN3TUs3YnprN1AxWS95MExPVS93Yzk1T3drYjRmTVJqOTkKWXFTb3hQMm5oNU9IQ0MxZzMyTEt6MmtHMFNWeXBzRko1a0xWOEYwdTlaSVdyUk02UzQzaU5aNGVYN0Z5Y3FxaQorVVZyZkc3VW4rSWFSRU1uSHpzcElqZGcvbXpsQmlHMmZmelRVRmw2MWZoZzNXckt2Y1hUK0FRWkpUaDFTeTJSCnRJTUU3MTF2L3YwR1ZNRGdvMUhJYjBUckRhN01Gc0hSQW9JQkFEUTBqbUtPTWh2eSt2akdCMFozMHVJNWNmTWkKMWdGOHg5U2pwamIxTWNhalRnMDlGZXFDZUY2VW1lbTNDU1BkaWRPMnlkSGFTTjlWZWpsRS9GRFNXZitPWHFoagpEWU9aaEhBUXZ6Umtub1A1YU81TXBMV1NNRU90enltamdxM2J1NzBlTVd4Nnp5KyttOXRGc2tYSG1GazZOekw1ClVtV3BPWTh5YnY4RXBweEt4NjhON0FOU3JFcTZBMDZOZjl4NTg2WkhsYlJFcjhaUnBuYVUrcTRSYU8zZms0cTMKdEVsWEk1VUJBVkZQU1VDNHpqUktRT2lUZS9HVndMUXZ4cEtvMEdVck1jb203Unowem5HNDljd3pQU1hjTFFGYQpxeTJybkpUVDhTanFOdUlCZHlZRzJrUnFSNGk5UDJZTEJWR21KY2FaMXFTTU1PZ0ZNUCsvTUhSbkdHUT0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K
