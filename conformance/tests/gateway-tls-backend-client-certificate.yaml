apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: gateway-tls-backend-client-certificate
  namespace: gateway-conformance-infra
spec:
  gatewayClassName: "{GATEWAY_CLASS_NAME}"
  listeners:
    - name: http
      port: 80
      protocol: HTTP
      allowedRoutes:
        namespaces:
          from: Same
  tls:
    backend:
      clientCertificateRef:
        group: ""
        kind: Secret
        name: tls-checks-client-certificate
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: gateway-tls-backend-client-certificate
  namespace: gateway-conformance-infra
spec:
  parentRefs:
    - name: gateway-tls-backend-client-certificate
      namespace: gateway-conformance-infra
  hostnames:
    - abc.example.com
  rules:
    - backendRefs:
        - group: ""
          kind: Service
          name: tls-backend-with-client-cert-validation
          port: 443
      matches:
        - path:
            type: Exact
            value: /
---
apiVersion: gateway.networking.k8s.io/v1
kind: BackendTLSPolicy
metadata:
  name: gateway-tls-backend-client-certificate-test
  namespace: gateway-conformance-infra
spec:
  targetRefs:
    - group: ""
      kind: Service
      name: tls-backend-with-client-cert-validation
  validation:
    caCertificateRefs:
      - group: ""
        kind: ConfigMap
        # This ConfigMap is generated dynamically by the test suite.
        name: "tls-checks-ca-certificate"
    hostname: "abc.example.com"
---
apiVersion: v1
kind: Service
metadata:
  name: tls-backend-with-client-cert-validation
  namespace: gateway-conformance-infra
spec:
  selector:
    app: tls-backend-with-client-cert-validation
  ports:
    - name: "https"
      protocol: TCP
      port: 443
      targetPort: 8443
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tls-backend-with-client-cert-validation
  namespace: gateway-conformance-infra
  labels:
    app: tls-backend-with-client-cert-validation
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tls-backend-with-client-cert-validation
  template:
    metadata:
      labels:
        app: tls-backend-with-client-cert-validation
    spec:
      containers:
        - name: tls-backend-with-client-cert-validation
          image: gcr.io/k8s-staging-gateway-api/echo-basic:v20240412-v1.0.0-394-g40c666fd
          volumeMounts:
            - name: secret-volume
              mountPath: /etc/secret-volume
            - name: configmap-volume
              mountPath: /etc/configmap-volume
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: TLS_SERVER_CERT
              value: /etc/secret-volume/crt
            - name: TLS_SERVER_PRIVKEY
              value: /etc/secret-volume/key
            - name: TLS_CLIENT_CACERTS
              value: /etc/configmap-volume/ca
          resources:
            requests:
              cpu: 10m
      volumes:
        - name: secret-volume
          secret:
            secretName: tls-checks-certificate
            items:
              - key: tls.crt
                path: crt
              - key: tls.key
                path: key
        - name: configmap-volume
          configMap:
            name: tls-checks-ca-certificate
            items:
              - key: ca.crt
                path: ca